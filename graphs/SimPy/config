# ClientCount is now based on the number of requests in the 'request' file
# Every client that communicates, is created. 
# Does not exist completely quiet clients
# C_CLIENT_COUNT = 2
C_ENQUEUE_PARITY_GROUP = 10
C_FORMING_PARITY_GROUP = 100
C_ENQUEUE_SEND_GROUP = 10
C_HIGH_CAPACITY_DISK_WRITE = 20
C_LOW_CAPACITY_DISK_WRITE = 9

# treshold before grouping requests in parity groups
C_PENDING_PARITY_GROUP = 5

# treshold before packing parity groups in send packets
C_PENDING_SEND_GROUP = 4
C_TOKEN_REFRESH_INTERVAL_ms = 10
C_TOKEN_COUNT = 240
C_PENDING_PARITY_TRESHOLD = 5
C_GEOMETRY_BASE = 3
C_GEOMETRY_PLUS = 1

C_SHOW_REQUESTS = 1


S_SERVER_COUNT = 4
S_SEND_ACK = 12
S_CAPABLEDISK_WRITE_BW = 300
S_TRANSFER_INITIAL_OVERHEAD = 200
S_OVERHEAD_DECAY_RATE = 2

S_HDD_DATA_COUNT = 8
S_HDD_DATA_READ_MBps = 200
S_HDD_DATA_WRITE_MBps = 50
S_HDD_DATA_CAPACITY_GB = 1024
S_HDD_DATA_LATENCY_ms = 40

S_HDD_METADATA_COUNT = 1
S_HDD_METADATA_BW_MB_PER_SEC = 150
S_HDD_METADATA_CAPACITY_GB = 1024
S_HDD_METADATA_LATENCY_MS = 2

S_SHOW_REQUESTS = 1

M_CLIENT_LOGFILE_NAME = client.log
M_SERVER_LOGFILE_NAME = server.log
M_HUB_BW_Gbps = 80
M_NETWORK_LATENCY_nS = 6667
M_NETWORK_BUFFER_SIZE_KB = 1000
